{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/local-storage-api.js","../src/js/render-tasks.js","../src/js/tasks.js","../src/main.js"],"sourcesContent":["export const taskFormData = document.querySelector('#task-form');\nexport const taskList = document.querySelector('#task-list');\nexport const btnChangeTheme = document.querySelector('#themeToggle');\n","export function saveTasksToLocalStorage(task) {\n  const tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n  tasks.push(task);\n  localStorage.setItem('tasks', JSON.stringify(tasks));\n}\n\nexport function loadTasksFromLocalStorage() {\n  return JSON.parse(localStorage.getItem('tasks')) || [];\n}\n\nexport function removeTaskFromLocalStorage(taskId) {\n  const tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n  const updatedTasks = tasks.filter(task => task.id !== taskId);\n  localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n}\n\nexport function saveThemeToLocalStorage(theme) {\n  localStorage.setItem('theme', theme);\n}\n\nexport function loadThemeFromLocalStorage() {\n  return localStorage.getItem('theme');\n}\n","export function createTaskMarkup({ id, title, description }) {\n  return `\n    <li class=\"task-list-item\" data-id=\"${id}\">\n      <div class=\"task-list-item-btns\">\n        <button class=\"task-list-item-btn edit-btn\">Edit</button>\n        <button class=\"task-list-item-btn delete-btn\">Delete</button>\n      </div>\n      <h3>${title}</h3>\n      <p>${description}</p>\n    </li>\n  `;\n}\n","import {\n  removeTaskFromLocalStorage,\n  saveTasksToLocalStorage,\n  saveThemeToLocalStorage,\n} from './local-storage-api.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport * as basicLightbox from 'basiclightbox';\nimport 'basiclightbox/dist/basicLightbox.min.css';\n\nexport function onDeleteTask(e) {\n  if (!e.target.classList.contains('delete-btn')) {\n    return;\n  }\n\n  const taskItem = e.target.closest('.task-list-item');\n  const taskId = taskItem.dataset.id;\n\n  taskItem.remove();\n  removeTaskFromLocalStorage(taskId);\n}\n\nexport function onChangeTheme() {\n  const isDarkTheme = document.body.classList.contains('theme-dark');\n  document.body.style.transition = 'background-color 0.3s ease-in-out';\n\n  if (isDarkTheme) {\n    document.body.classList.replace('theme-dark', 'theme-light');\n    saveThemeToLocalStorage('theme-light');\n    iziToast.info({\n      title: 'Theme changed',\n      message: 'Light theme activated',\n      position: 'center',\n      timeout: 4000,\n    });\n  } else {\n    document.body.classList.replace('theme-light', 'theme-dark');\n    saveThemeToLocalStorage('theme-dark');\n    iziToast.info({\n      title: 'Theme changed',\n      message: 'Dark theme activated',\n      position: 'center',\n      timeout: 4000,\n    });\n  }\n}\n\nexport function editTask(e) {\n  const taskItem = e.target.closest('.task-list-item');\n  const taskId = taskItem.dataset.id;\n  const taskTitle = taskItem.querySelector('h3').textContent;\n  const taskDescription = taskItem.querySelector('p').textContent;\n\n  const instance = basicLightbox.create(`\n  <div class=\"modal modal-editor\">\n    <h2 class=\"modal-editor__title\">Edit Task</h2>\n    <input \n      type=\"text\" \n      value=\"${taskTitle}\" \n      id=\"edit-title\" \n      class=\"modal-editor__input\"\n    />\n    <textarea \n      id=\"edit-description\" \n      class=\"modal-editor__textarea\"\n    >${taskDescription}</textarea>\n    <div class=\"modal-editor__btns\">\n      <button id=\"save-changes\" class=\"modal-editor__btn modal-editor__btn--save\">Save Changes</button>\n      <button id=\"quit\" class=\"modal-editor__btn modal-editor__btn--quit\">Quit</button>\n    </div>\n  </div>\n`);\n\n  instance.show();\n\n  document.getElementById('save-changes').addEventListener('click', () => {\n    const newTitle = document.getElementById('edit-title').value.trim();\n    const newDescription = document\n      .getElementById('edit-description')\n      .value.trim();\n\n    const updatedTask = {\n      id: taskId,\n      title: newTitle,\n      description: newDescription,\n    };\n\n    taskItem.querySelector('h3').textContent = newTitle;\n    taskItem.querySelector('p').textContent = newDescription;\n    saveTasksToLocalStorage(updatedTask);\n    instance.close();\n  });\n\n  document.getElementById('quit').addEventListener('click', () => {\n    instance.close();\n  });\n}\n","/*\n  Створи список справ.\n  На сторінці є два інпути які має вводитися назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\n\nimport * as refs from './js/refs.js';\nimport {\n  saveTasksToLocalStorage,\n  loadTasksFromLocalStorage,\n  loadThemeFromLocalStorage,\n} from './js/local-storage-api.js';\nimport { v4 as uuidv4 } from 'uuid';\nimport { createTaskMarkup } from './js/render-tasks.js';\nimport { onDeleteTask, onChangeTheme, editTask } from './js/tasks.js';\n\nrefs.taskFormData.addEventListener('submit', onFormSubmit);\n\nloadTasks();\nloadTheme();\nrefs.taskList.addEventListener('click', onDeleteTask);\nrefs.btnChangeTheme.addEventListener('click', onChangeTheme);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const form = e.currentTarget;\n  const { taskName, taskDescription } = form.elements;\n\n  if (!taskName.value.trim() || !taskDescription.value.trim()) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please fill in all fields',\n      position: 'center',\n      timeout: 4000,\n    });\n    return;\n  }\n\n  const task = {\n    id: uuidv4(),\n    title: taskName.value.trim(),\n    description: taskDescription.value.trim(),\n  };\n\n  const taskMarkup = createTaskMarkup(task);\n  refs.taskList.insertAdjacentHTML('beforeend', taskMarkup);\n  saveTasksToLocalStorage(task);\n  form.reset();\n}\n\nfunction loadTasks() {\n  const tasks = loadTasksFromLocalStorage();\n  const taskMarkup = tasks.map(createTaskMarkup).join('');\n  refs.taskList.insertAdjacentHTML('beforeend', taskMarkup);\n}\n\nfunction loadTheme() {\n  const theme = loadThemeFromLocalStorage();\n  if (theme === 'theme-light') {\n    document.body.classList.replace('theme-dark', 'theme-light');\n  }\n}\n\nrefs.taskList.addEventListener('click', function (e) {\n  if (e.target.classList.contains('edit-btn')) {\n    editTask(e);\n  }\n});\n"],"names":["taskFormData","taskList","btnChangeTheme","saveTasksToLocalStorage","task","tasks","loadTasksFromLocalStorage","removeTaskFromLocalStorage","taskId","updatedTasks","saveThemeToLocalStorage","theme","loadThemeFromLocalStorage","createTaskMarkup","id","title","description","onDeleteTask","e","taskItem","onChangeTheme","isDarkTheme","iziToast","editTask","taskTitle","taskDescription","instance","basicLightbox.create","newTitle","newDescription","updatedTask","refs.taskFormData","onFormSubmit","loadTasks","loadTheme","refs.taskList","refs.btnChangeTheme","form","taskName","uuidv4","taskMarkup"],"mappings":"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"}